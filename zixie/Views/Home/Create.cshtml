@model zixie.Models.RegisterModel

@{
    ViewData["Title"] = "Create";
}
@*<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Nickname" class="control-label"></label>
                <input asp-for="Nickname" class="form-control" />
                <span asp-validation-for="Nickname" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>*@
<section>
  <div class="mask d-flex align-items-center h-100 gradient-custom-3">
    <div class="container h-100">
      <div class="row d-flex justify-content-center h-100">
        <div class="col-12 col-md-9 col-lg-7 col-xl-6">
          <div class="card" style="border-radius: 15px;">
            <div class="card-body p-5">
              <h2 class="text-uppercase text-center mb-5">Create an account</h2>

              <form method="get" action="Create_Action">
                  @Html.ValidationSummary(true)
                <div class="form-outline mb-4">
                  @Html.EditorFor(model => model.Name, new { @class = "form-control form-control-lg" })

                    @Html.LabelFor(model => model.Name, new { @class = "form-label" })

                    @Html.ValidationMessageFor(model => model.Name)
                </div>

                <div class="form-outline mb-4">
                  @Html.EditorFor(model => model.Email, new { @class = "form-control form-control-lg" })

                    @Html.LabelFor(model => model.Email, new { @class = "form-label" })

                    @Html.ValidationMessageFor(model => model.Email)
                </div>

                <div class="form-outline mb-4">
                  @Html.PasswordFor(model => model.Password, new { @class = "form-control form-control-lg" })
                    @Html.LabelFor(model => model.Password, new { @class = "form-label" })
                    @Html.ValidationMessageFor(model => model.Password)
                </div>

                <div class="form-outline mb-4">
                  @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control form-control-lg" })
                    @Html.LabelFor(model => model.ConfirmPassword, new { @class = "form-label" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                </div>

                <div class="form-check d-flex justify-content-center mb-5">
                  <input
                    class="form-check-input me-2"
                    type="checkbox"
                    value=""
                    id="form2Example3cg"
                  />
                  <label class="form-check-label" for="form2Example3g">
                    I agree all statements in <a href="#!" class="text-body"><u>Terms of service</u></a>
                  </label>
                </div>

                <div class="d-flex justify-content-center">
                  <button type="submit" class="btn btn-success btn-block btn-lg gradient-custom-4 text-light">Register</button>
                </div>

                <p class="text-center text-muted mt-5 mb-0">Already have an account? <a asp-action="Login" asp-controller="Home" class="fw-bold text-body"><u>Login here</u></a></p>

              </form>

            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
